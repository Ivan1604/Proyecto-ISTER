/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista.PanelDocente;

import Controlador.Coordinador;
import Modelo.Curso.ClaseVo;
import Modelo.Docente.DocenteVo;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author EDWIN
 */
public class DocenteControl extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form Login
     */
    private Dimension dim;
    Coordinador coordinador;
    DocenteVo docente = new DocenteVo();
    ClaseVo clase = new ClaseVo();
    boolean flag = true;
    boolean flag1 = true;

    public ClaseVo getClase() {
        return clase;
    }

    public void setClase(ClaseVo clase) {
        this.clase = clase;
        System.out.println(clase.getDia());
    }

    public DocenteVo getDocente() {
        return docente;
    }

    public void setDocente(DocenteVo docente) {
        this.docente = docente;
    }

    public DocenteControl(Coordinador coord) {
        coordinador = coord;
        initComponents();
        this.pack();
        dim = super.getToolkit().getScreenSize();
        this.setSize(dim);
        //this.setUndecorated(true);
        //this.setVisible(true);
        this.getContentPane().setBackground(Color.white);
        btnTematica.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        escritorio = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        Inicio = new javax.swing.JMenu();
        btnInicio = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        editarDocente = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        asistenciaEstudiante = new javax.swing.JMenuItem();
        jMenu13 = new javax.swing.JMenu();
        btnTematica = new javax.swing.JMenuItem();
        jMenu9 = new javax.swing.JMenu();
        btnVerHorario = new javax.swing.JMenuItem();
        jMenu11 = new javax.swing.JMenu();
        btnCerrarSesion = new javax.swing.JMenuItem();
        btnSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(escritorio, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 710));

        jMenuBar1.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jMenuBar1.setMargin(new java.awt.Insets(5, 5, 5, 5));

        Inicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Inicio.png"))); // NOI18N
        Inicio.setText("Inicio      ");
        Inicio.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        Inicio.setMargin(new java.awt.Insets(10, 10, 10, 10));

        btnInicio.setText("Inicio");
        btnInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInicioActionPerformed(evt);
            }
        });
        Inicio.add(btnInicio);

        jMenuBar1.add(Inicio);

        jMenu7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/trabajadores.png"))); // NOI18N
        jMenu7.setText("Perfil Docente      ");
        jMenu7.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        jMenu7.setMargin(new java.awt.Insets(10, 10, 10, 10));

        editarDocente.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        editarDocente.setText("Editar");
        editarDocente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarDocenteActionPerformed(evt);
            }
        });
        jMenu7.add(editarDocente);

        jMenuBar1.add(jMenu7);

        jMenu8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/edit.png"))); // NOI18N
        jMenu8.setText("Tomar Lista      ");
        jMenu8.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        jMenu8.setMargin(new java.awt.Insets(10, 10, 10, 10));

        asistenciaEstudiante.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        asistenciaEstudiante.setText("Asistencia");
        asistenciaEstudiante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asistenciaEstudianteActionPerformed(evt);
            }
        });
        jMenu8.add(asistenciaEstudiante);

        jMenuBar1.add(jMenu8);

        jMenu13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/guardar.png"))); // NOI18N
        jMenu13.setText("Diario Tem√°tico      ");
        jMenu13.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        jMenu13.setMargin(new java.awt.Insets(10, 10, 10, 10));

        btnTematica.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        btnTematica.setText("Ingreso");
        btnTematica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTematicaActionPerformed(evt);
            }
        });
        jMenu13.add(btnTematica);

        jMenuBar1.add(jMenu13);

        jMenu9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ordering-icon.png"))); // NOI18N
        jMenu9.setText("Horario      ");
        jMenu9.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        jMenu9.setMargin(new java.awt.Insets(10, 10, 10, 10));

        btnVerHorario.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        btnVerHorario.setText("Ver");
        btnVerHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerHorarioActionPerformed(evt);
            }
        });
        jMenu9.add(btnVerHorario);

        jMenuBar1.add(jMenu9);

        jMenu11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/application_exit.png"))); // NOI18N
        jMenu11.setText("Salir");
        jMenu11.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        jMenu11.setMargin(new java.awt.Insets(10, 10, 10, 10));

        btnCerrarSesion.setText("Cerrar Sesion");
        btnCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesionActionPerformed(evt);
            }
        });
        jMenu11.add(btnCerrarSesion);

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jMenu11.add(btnSalir);

        jMenuBar1.add(jMenu11);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVerHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerHorarioActionPerformed
        coordinador.showHorarioDocente();
    }//GEN-LAST:event_btnVerHorarioActionPerformed

    private void btnCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesionActionPerformed
        if (coordinador.getClase() != null) {
            java.util.Date d = new java.util.Date();
            GregorianCalendar gc = new GregorianCalendar();
            gc.setTime(d);
            SimpleDateFormat ff = new SimpleDateFormat("HH:mm:ss");
            String salida = ff.format(d);
            coordinador.getAsistenciaDocente1().setSalida(salida);
            coordinador.asistenciaDocente();
        }
        flag = false;
        flag1 = false;
        clase = null;
        coordinador.hideDocenteControl();
        coordinador.showLogin();
    }//GEN-LAST:event_btnCerrarSesionActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        flag = false;
        flag1 = false;
        clase = null;
        System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInicioActionPerformed
        coordinador.showInicioDocente();
    }//GEN-LAST:event_btnInicioActionPerformed

    private void asistenciaEstudianteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asistenciaEstudianteActionPerformed
        coordinador.verificaAsistencia(coordinador.getClase().getCurso());
        coordinador.getAsistenciaDocente().llenaTablaLista();
        coordinador.showAsistenciaDocente();
    }//GEN-LAST:event_asistenciaEstudianteActionPerformed

    private void editarDocenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarDocenteActionPerformed
        coordinador.showEditarDocentePanel();
    }//GEN-LAST:event_editarDocenteActionPerformed

    private void btnTematicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTematicaActionPerformed
        coordinador.getTematicaDocente().actualizarTabla();
        coordinador.showTematicaDocente();
    }//GEN-LAST:event_btnTematicaActionPerformed

    /**
     * @param args the command line arguments
     */
    /* public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Administrador().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Inicio;
    public javax.swing.JMenuItem asistenciaEstudiante;
    private javax.swing.JMenuItem btnCerrarSesion;
    private javax.swing.JMenuItem btnInicio;
    private javax.swing.JMenuItem btnSalir;
    public javax.swing.JMenuItem btnTematica;
    private javax.swing.JMenuItem btnVerHorario;
    private javax.swing.JMenuItem editarDocente;
    public javax.swing.JPanel escritorio;
    private javax.swing.JMenu jMenu11;
    private javax.swing.JMenu jMenu13;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables

    public void controla() {
        btnTematica.setEnabled(false);
        flag = false;
        flag1 = false;
        clase = null;
        clase = coordinador.getClase();
        (new Thread(this)).start();
    }

    //activar diario tem√°tico
    @Override
    public void run() {
        flag = true;
        flag1 = true;
        int final1;
        int final2;
        while (clase != null) {
            btnTematica.setEnabled(false);
            Calendar hora = Calendar.getInstance();
            int inicial = hora.get(Calendar.MINUTE);
            if (inicial == 59) {
                final1 = 0;
                final2 = 0;
            } else {
                final1 = inicial + 1;
                final2 = final1 + 1;
            }
            flag = true;
            flag1 = true;
            while (flag) {
                while (flag1) {
                    //System.out.println(final1 + "-" + hora.get(Calendar.MINUTE));
                    hora = Calendar.getInstance();
                    if (final1 == hora.get(Calendar.MINUTE)) {
                        System.out.println("ACTIVO");
                        btnTematica.setEnabled(true);
                        flag1 = false;
                        JOptionPane.showMessageDialog(null, "Se habilit√≥ el ingreso de tematica", "Ingreso de Tematica Activo", JOptionPane.WARNING_MESSAGE);
                    }
                }
                hora = Calendar.getInstance();
                if (final2 == hora.get(Calendar.MINUTE)) {
                    System.out.println("DESACTIVO");
                    btnTematica.setEnabled(false);
                    flag = false;
                    JOptionPane.showMessageDialog(null, "Se deshabilit√≥ el ingreso de tematica", "Ingreso de Tematica Inactivo", JOptionPane.WARNING_MESSAGE);
                }

            }
            coordinador.showInicioDocente();
            if(clase==null){
                return;
            }else{
                coordinador.ClaseActual(clase.getHora() + 1, clase.getDia(), docente.getCedula());
                clase = coordinador.getClase();
                coordinador.docenteControlTematica(docente); 
            }
            
        }
        java.util.Date d = new java.util.Date();
        GregorianCalendar gc = new GregorianCalendar();
        gc.setTime(d);
        SimpleDateFormat ff = new SimpleDateFormat("HH:mm:ss");
        String salida = ff.format(d);
        coordinador.getAsistenciaDocente1().setSalida(salida);
        coordinador.asistenciaDocente();

    }
}
