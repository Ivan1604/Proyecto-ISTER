/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista.Curso;

import Controlador.Coordinador;
import Modelo.Curso.ClaseVo;
import Modelo.Curso.CursoVo;
import Modelo.Docente.DocenteVo;
import Modelo.Materia.MateriaVo;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class IngresarCurso extends javax.swing.JPanel {

    /**
     * Creates new form ini
     */
    Coordinador coordinador;
    MateriaVo materia1 = new MateriaVo();
    DocenteVo docente1 = new DocenteVo();

    boolean verifica1 = false;
    boolean verifica2 = false;

    DefaultTableModel md;
    String data[][] = {};
    String cabeza[] = {"Curso", "Materia", "Docente"};

    DefaultTableModel md1;
    String data1[][] = {};
    String cabeza1[] = {"Código", "Nombre", "Tipo", "Carrera"};

    DefaultTableModel md2;
    String data2[][] = {};
    String cabeza2[] = {"Cedula", "Nombre", "Apellido", "Carga Horaria"};

    ArrayList<DocenteVo> docentes = new ArrayList<DocenteVo>();
    ArrayList<CursoVo> cursos = new ArrayList<CursoVo>();
    ArrayList<MateriaVo> materias = new ArrayList<MateriaVo>();

    public IngresarCurso(Coordinador coord) {
        initComponents();
       // btnLimpiar.setVisible(false);
        btnGuardar.setEnabled(false);
        btnVDocente.setEnabled(false);
        coordinador = coord;
        actualizarTablaCursos();
        actualizarTablaDocentes();
        actualizarTablaMaterias();
        Tcursos.setVisible(true);
        Scursos.setVisible(true);
        Tmaterias.setVisible(false);
        Smaterias.setVisible(false);
        Tdocentes.setVisible(false);
        Sdocentes.setVisible(false);
        Shorario.setVisible(false);
        horario.setVisible(false);
        txtNombreD.setEnabled(false);
        txtNombreM.setEnabled(false);
        limpiar();
    }

    public void actualizarTablaDocentes() {
        docentes = new ArrayList<DocenteVo>();
        docentes = coordinador.docentesRegistrados();
        md2 = new DefaultTableModel(data2, cabeza2) {

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        this.Tdocentes.setModel(md2);
        for (int i = 0; i < docentes.size(); i++) {
            String arr[] = {docentes.get(i).getCedula(), docentes.get(i).getNombre1(), docentes.get(i).getApellido1(), String.valueOf(docentes.get(i).getCreditos())};
            md2.addRow(arr);
        }
    }

    public void actualizarTablaCursos() {
        ArrayList<CursoVo> cursos = new ArrayList<CursoVo>();
        cursos = coordinador.cursosRegistrados();
        md = new DefaultTableModel(data, cabeza) {

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        this.Tcursos.setModel(md);
        for (int i = 0; i < cursos.size(); i++) {
            String arr[] = {String.valueOf(cursos.get(i).getCodigo()), cursos.get(i).getMateria(), cursos.get(i).getDocente()};
            md.addRow(arr);
        }
    }

    public void actualizarTablaMaterias() {
        materias = new ArrayList<MateriaVo>();
        materias = coordinador.materiasRegistradas();
        md1 = new DefaultTableModel(data1, cabeza1) {

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        this.Tmaterias.setModel(md1);
        for (int i = 0; i < materias.size(); i++) {
            String arr[] = {materias.get(i).getCodigo(), materias.get(i).getNombre(), materias.get(i).getTipo(), materias.get(i).getCarrera()};
            md1.addRow(arr);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtMateria = new javax.swing.JTextField();
        btnLimpiar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        Scursos = new javax.swing.JScrollPane();
        Tcursos = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblReloj = new javax.swing.JLabel();
        btnTMaterias = new javax.swing.JButton();
        txtDocente = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        Shorario = new javax.swing.JScrollPane();
        horario = new javax.swing.JTable();
        btnVDocente = new javax.swing.JButton();
        btnVMateria = new javax.swing.JButton();
        btnTCursos = new javax.swing.JButton();
        btnTDocentes = new javax.swing.JButton();
        Sdocentes = new javax.swing.JScrollPane();
        Tdocentes = new javax.swing.JTable();
        Smaterias = new javax.swing.JScrollPane();
        Tmaterias = new javax.swing.JTable();
        comboTipoBusqueda = new javax.swing.JComboBox<>();
        txtNombreM = new javax.swing.JTextField();
        txtNombreD = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Century Schoolbook", 1, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("CREACIÓN DE CURSOS");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 1380, 50));

        txtMateria.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        txtMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMateriaActionPerformed(evt);
            }
        });
        txtMateria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMateriaKeyReleased(evt);
            }
        });
        add(txtMateria, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 120, 220, -1));

        btnLimpiar.setFont(new java.awt.Font("Century Schoolbook", 1, 12)); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 360, 120, 30));

        btnGuardar.setFont(new java.awt.Font("Century Schoolbook", 1, 12)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 310, 120, 30));

        Tcursos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Curso", "Materia", "Docente"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tcursos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TcursosMouseClicked(evt);
            }
        });
        Scursos.setViewportView(Tcursos);

        add(Scursos, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 460, 770, 110));

        jLabel5.setFont(new java.awt.Font("Century Schoolbook", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("TELFS: 2331-599 / 2332-554 / 2331-628");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 660, 350, -1));

        jLabel7.setFont(new java.awt.Font("Century Schoolbook", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("E-mail: info@ister.edu.ec");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 660, 190, -1));

        lblReloj.setFont(new java.awt.Font("Century Schoolbook", 1, 14)); // NOI18N
        lblReloj.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblReloj.setText("RELOJ");
        add(lblReloj, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 70, 310, 30));

        btnTMaterias.setFont(new java.awt.Font("Century Schoolbook", 1, 14)); // NOI18N
        btnTMaterias.setText("MATERIAS");
        btnTMaterias.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnTMaterias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTMateriasActionPerformed(evt);
            }
        });
        add(btnTMaterias, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 590, 150, 30));

        txtDocente.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        txtDocente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDocenteActionPerformed(evt);
            }
        });
        txtDocente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDocenteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDocenteKeyTyped(evt);
            }
        });
        add(txtDocente, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 200, 220, -1));

        jLabel12.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Busque la materia y al docente para habilitar el horario");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 90, 470, -1));

        Shorario.setBorder(null);
        Shorario.setToolTipText("");

        horario.setFont(new java.awt.Font("Century Schoolbook", 0, 8)); // NOI18N
        horario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", null, null, null, null, null},
                {"2", null, null, null, null, null},
                {"3", null, null, null, null, null},
                {"4", null, null, null, null, null},
                {"5", null, null, null, null, null},
                {"6", null, null, null, null, null}
            },
            new String [] {
                "Hora", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        horario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                horarioMouseClicked(evt);
            }
        });
        Shorario.setViewportView(horario);

        add(Shorario, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 310, 340, 130));

        btnVDocente.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        btnVDocente.setText("Buscar Docente");
        btnVDocente.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnVDocente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVDocenteActionPerformed(evt);
            }
        });
        add(btnVDocente, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 200, 120, 30));

        btnVMateria.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        btnVMateria.setText("Buscar Materia");
        btnVMateria.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnVMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVMateriaActionPerformed(evt);
            }
        });
        add(btnVMateria, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 120, 120, 30));

        btnTCursos.setFont(new java.awt.Font("Century Schoolbook", 1, 14)); // NOI18N
        btnTCursos.setText("CURSOS");
        btnTCursos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnTCursos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTCursosActionPerformed(evt);
            }
        });
        add(btnTCursos, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 590, 150, 30));

        btnTDocentes.setFont(new java.awt.Font("Century Schoolbook", 1, 14)); // NOI18N
        btnTDocentes.setText("DOCENTES");
        btnTDocentes.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnTDocentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTDocentesActionPerformed(evt);
            }
        });
        add(btnTDocentes, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 590, 150, 30));

        Tdocentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Cedula", "Nombre", "Apellido", "Creditos"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tdocentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TdocentesMouseClicked(evt);
            }
        });
        Sdocentes.setViewportView(Tdocentes);

        add(Sdocentes, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 460, 770, 110));

        Tmaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Codigo", "Nomnre", "Tipo", "Creditos"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tmaterias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TmateriasMouseClicked(evt);
            }
        });
        Smaterias.setViewportView(Tmaterias);

        add(Smaterias, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 460, 690, 110));

        comboTipoBusqueda.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        comboTipoBusqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código", "Nombre" }));
        add(comboTipoBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 120, 120, -1));

        txtNombreM.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        txtNombreM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreMActionPerformed(evt);
            }
        });
        txtNombreM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreMKeyTyped(evt);
            }
        });
        add(txtNombreM, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 160, 220, -1));

        txtNombreD.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        txtNombreD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreDActionPerformed(evt);
            }
        });
        txtNombreD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreDKeyTyped(evt);
            }
        });
        add(txtNombreD, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 240, 220, -1));

        jLabel13.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Nombre Docente:");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 240, 160, 20));

        jLabel14.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Cédula Docente:");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 200, 160, 20));

        jLabel15.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Nombre materia:");
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 160, 160, 20));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/LogoSinFonfoRumi.png"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 130, -1, 180));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/LogoSinBase.png"))); // NOI18N
        jLabel1.setText(".");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 290, 230));
    }// </editor-fold>//GEN-END:initComponents

    private void txtMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMateriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMateriaActionPerformed

    public void limpiar() {
        Shorario.setVisible(false);
        horario.setVisible(false);
       
        txtMateria.setEnabled(true);
        txtMateria.setText("");
        txtDocente.setText("");
        actualizarTablaMaterias();
        actualizarTablaCursos();
        actualizarTablaDocentes();
        txtNombreD.setText("");
        txtNombreM.setText("");
        txtDocente.setEnabled(false);
        btnVDocente.setEnabled(false);
        btnVMateria.setEnabled(true);
        comboTipoBusqueda.setEnabled(true);
    }

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    public int asignaCurso() {
        Random rnd = new Random();
        int codigo = (int) (rnd.nextDouble() * 1000 + 1);
        while (coordinador.existeCurso(codigo)) {
            codigo = (int) (rnd.nextDouble() * 1000 + 1);
            System.out.println(codigo);
        }
        return codigo;
    }

    public boolean horarioLleno() {
        for (int i = 0; i < 6; i++) {
            for (int j = 1; j < 6; j++) {
                if (!(horario.getValueAt(i, j) == null)) {
                    if (horario.getValueAt(i, j).toString().equals("true")) {
                        return true;
                    }
                }
            }
        }
        return false;
    }


    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        int resp = JOptionPane.showConfirmDialog(null, "¿Está seguro?");
        if (resp == 0) {
            if (horarioLleno()) {
                int codigo = asignaCurso();
                CursoVo curso = new CursoVo(codigo, txtMateria.getText(), txtDocente.getText());
                coordinador.ingresarCurso(curso);
                for (int i = 0; i < 6; i++) {
                    for (int j = 1; j < 6; j++) {
                        if (!(horario.getValueAt(i, j) == null)) {
                            if (horario.getValueAt(i, j).toString().equals("true")) {
                                ClaseVo clase = new ClaseVo(i + 1, j, "H100", txtDocente.getText(), codigo);
                                coordinador.ingresarClase(clase);
                                horario.setValueAt(false, i, j);
                                btnGuardar.setEnabled(false);
                            }
                        }
                    }
                }
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "Asigne clases al curso. Intente nuevamente", "Error de Registro", JOptionPane.WARNING_MESSAGE);
            }

        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnTMateriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTMateriasActionPerformed
        actualizarTablaCursos();
        actualizarTablaDocentes();
        actualizarTablaMaterias();
        Tcursos.setVisible(false);
        Scursos.setVisible(false);
        Tmaterias.setVisible(true);
        Smaterias.setVisible(true);
        Tdocentes.setVisible(false);
        Sdocentes.setVisible(false);
    }//GEN-LAST:event_btnTMateriasActionPerformed

    private void txtDocenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDocenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDocenteActionPerformed

    public boolean validaCampos() {
        if (txtMateria.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese el código de la materia e intentelo de nuevo.", "Error de Registro", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (txtDocente.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese la cédula del docente e intentelo de nuevo.", "Error de Registro", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }

    private void btnVDocenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVDocenteActionPerformed
        if (coordinador.existeDocente(txtDocente.getText())) {
            try {
                JOptionPane.showMessageDialog(null, "El docente se encuentra registrada en el sistema.", "Verificacion", JOptionPane.WARNING_MESSAGE);
                docente1 = coordinador.buscarDocente(txtDocente.getText());
                txtNombreD.setText(docente1.getNombre1() + " " + docente1.getApellido1());
                verifica2 = true;
                btnVDocente.setEnabled(false);
                txtDocente.setEnabled(false);
                btnGuardar.setEnabled(true);
                btnLimpiar.setEnabled(true);

            } catch (IOException ex) {
                Logger.getLogger(IngresarCurso.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            verifica1 = false;
            JOptionPane.showMessageDialog(null, "El docente no se encuentra registrada en el sistema.", "Verificacion", JOptionPane.WARNING_MESSAGE);
        }
        habilitaHorario();
    }//GEN-LAST:event_btnVDocenteActionPerformed

    public void habilitaHorario() {
        if (verifica1 && verifica2) {
            Shorario.setVisible(true);
            horario.setVisible(true);
            txtDocente.setEnabled(false);
            txtMateria.setEnabled(false);
            verifica1 = false;
            verifica2 = false;
        } else {
            Shorario.setVisible(false);
            horario.setVisible(false);
        }
    }

    private void btnVMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVMateriaActionPerformed
        if (coordinador.existeMateria("CODIGOMATERIA", txtMateria.getText())) {
            JOptionPane.showMessageDialog(null, "La materia se encuentra registrada en el sistema.", "Verificacion", JOptionPane.WARNING_MESSAGE);
            materia1 = coordinador.buscarMateria("CODIGOMATERIA", txtMateria.getText());
            txtNombreM.setText(materia1.getNombre());
            verifica1 = true;
            btnVMateria.setEnabled(false);
            txtMateria.setEnabled(false);
            comboTipoBusqueda.setEnabled(false);
             btnVDocente.setEnabled(true);
             txtDocente.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(null, "La materia no se encuentra registrada en el sistema.", "Verificacion", JOptionPane.WARNING_MESSAGE);
            verifica1 = false;
        }
        habilitaHorario();
    }//GEN-LAST:event_btnVMateriaActionPerformed

    private void btnTCursosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTCursosActionPerformed
        actualizarTablaCursos();
        actualizarTablaDocentes();
        actualizarTablaMaterias();
        Tcursos.setVisible(true);
        Scursos.setVisible(true);
        Tmaterias.setVisible(false);
        Smaterias.setVisible(false);
        Tdocentes.setVisible(false);
        Sdocentes.setVisible(false);

    }//GEN-LAST:event_btnTCursosActionPerformed

    private void btnTDocentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTDocentesActionPerformed
        actualizarTablaCursos();
        actualizarTablaDocentes();
        actualizarTablaMaterias();
        Tcursos.setVisible(false);
        Scursos.setVisible(false);
        Tmaterias.setVisible(false);
        Smaterias.setVisible(false);
        Tdocentes.setVisible(true);
        Sdocentes.setVisible(true);

    }//GEN-LAST:event_btnTDocentesActionPerformed

    private void TcursosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TcursosMouseClicked
        int fila = Tcursos.rowAtPoint(evt.getPoint());
        if (fila > -1) {
            System.out.println(String.valueOf(Tcursos.getValueAt(fila, 1)));
        }
    }//GEN-LAST:event_TcursosMouseClicked

    private void TmateriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TmateriasMouseClicked
        int fila = Tmaterias.rowAtPoint(evt.getPoint());
        if (fila > -1) {
            txtNombreM.setText(String.valueOf(Tmaterias.getValueAt(fila, 1)));
            txtMateria.setText(String.valueOf(Tmaterias.getValueAt(fila, 0)));
        }
    }//GEN-LAST:event_TmateriasMouseClicked

    private void TdocentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TdocentesMouseClicked
        int fila = Tdocentes.rowAtPoint(evt.getPoint());
        if (fila > -1) {
            txtNombreD.setText((Tdocentes.getValueAt(fila, 1) + " " + Tdocentes.getValueAt(fila, 2)));
            txtDocente.setText(String.valueOf(Tdocentes.getValueAt(fila, 0)));
        }
    }//GEN-LAST:event_TdocentesMouseClicked

    private void horarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_horarioMouseClicked
        int fila = horario.rowAtPoint(evt.getPoint());
        int columna = horario.columnAtPoint(evt.getPoint());
        if ((fila > -1) && horario.getValueAt(fila, columna).toString().equals("true")) {
            System.out.println(fila + "-" + columna);
            ClaseVo clase = new ClaseVo(fila + 1, columna, "H100", txtDocente.getText(), 0);
            if (coordinador.existeClase(clase)) {
                horario.setValueAt(false, fila, columna);
            }
        }
    }//GEN-LAST:event_horarioMouseClicked

    private void txtDocenteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDocenteKeyTyped
        coordinador.logica.validaNumero(evt);
    }//GEN-LAST:event_txtDocenteKeyTyped

    private void txtNombreMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreMActionPerformed

    private void txtNombreMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreMKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreMKeyTyped

    private void txtNombreDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreDActionPerformed

    private void txtNombreDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreDKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreDKeyTyped

    public void actualizarTablaCoincidenciasMaterias(ArrayList<MateriaVo> materias) {
        md1 = new DefaultTableModel(data1, cabeza1) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        this.Tmaterias.setModel(md1);
        for (int i = 0; i < materias.size(); i++) {
            String arr[] = {materias.get(i).getCodigo(), materias.get(i).getNombre(), materias.get(i).getTipo(), materias.get(i).getCarrera()};
            md1.addRow(arr);
        }
    }

    public void actualizarTablaCoincidenciasDocentes(ArrayList<DocenteVo> docentes1) {
        md2 = new DefaultTableModel(data2, cabeza2) {

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        this.Tdocentes.setModel(md2);
        for (int i = 0; i < docentes1.size(); i++) {
            String arr[] = {docentes1.get(i).getCedula(), docentes1.get(i).getNombre1(), docentes1.get(i).getApellido1(), String.valueOf(docentes1.get(i).getCreditos())};
            md2.addRow(arr);
        }
    }

    private void txtMateriaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMateriaKeyReleased
        if (comboTipoBusqueda.getSelectedItem().equals("Código")) {
            String tipoB = "CODIGOMATERIA";
            String valor = txtMateria.getText();
            ArrayList<MateriaVo> materias1 = new ArrayList<MateriaVo>();
            materias1 = coordinador.buscarMateriasCoincidencias(tipoB, valor);
            actualizarTablaCoincidenciasMaterias(materias1);
            return;
        }
        String tipoB = "NOMBREMATERIA";
        String valor = txtMateria.getText();
        ArrayList<MateriaVo> materias1 = new ArrayList<MateriaVo>();
        materias1 = coordinador.buscarMateriasCoincidencias(tipoB, valor);
        actualizarTablaCoincidenciasMaterias(materias1);
    }//GEN-LAST:event_txtMateriaKeyReleased

    private void txtDocenteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDocenteKeyReleased
        String cedula = txtDocente.getText();
        ArrayList<DocenteVo> docentes1 = new ArrayList<DocenteVo>();
        docentes1 = coordinador.docentesCoincidencia(cedula);
        actualizarTablaCoincidenciasDocentes(docentes1);

    }//GEN-LAST:event_txtDocenteKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane Scursos;
    private javax.swing.JScrollPane Sdocentes;
    private javax.swing.JScrollPane Shorario;
    private javax.swing.JScrollPane Smaterias;
    private javax.swing.JTable Tcursos;
    private javax.swing.JTable Tdocentes;
    private javax.swing.JTable Tmaterias;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnTCursos;
    private javax.swing.JButton btnTDocentes;
    private javax.swing.JButton btnTMaterias;
    private javax.swing.JButton btnVDocente;
    private javax.swing.JButton btnVMateria;
    private javax.swing.JComboBox<String> comboTipoBusqueda;
    private javax.swing.JTable horario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    public javax.swing.JLabel lblReloj;
    private javax.swing.JTextField txtDocente;
    private javax.swing.JTextField txtMateria;
    private javax.swing.JTextField txtNombreD;
    private javax.swing.JTextField txtNombreM;
    // End of variables declaration//GEN-END:variables
}
