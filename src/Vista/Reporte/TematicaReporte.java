/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista.Reporte;

import Vista.Materias.*;
import Controlador.Coordinador;
import Modelo.Docente.DocenteVo;
import Modelo.Materia.MateriaVo;
import Modelo.Tema.TemaVo;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.parser.PdfTextExtractor;
import com.itextpdf.text.pdf.parser.SimpleTextExtractionStrategy;
import java.awt.Desktop;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

public class TematicaReporte extends javax.swing.JPanel {

    /**
     * Creates new form ini
     */
    Coordinador coordinador;
    String Query = "SELECT * FROM tema C INNER JOIN curso O ON C.CODIGOCURSO = O.CODIGOCURSO WHERE O.CODIGOMATERIA IN (SELECT CODIGOMATERIA FROM materia WHERE NOMBREMATERIA LIKE '";
    ArrayList<TemaVo> tema1 = new ArrayList<TemaVo>();
    String seleccion = "CARRERAMATERIA";
    DefaultTableModel md1;
    String reporte = "CARRERA";
    String data1[][] = {};
    String cabeza1[] = {"Curso", "Tema", "Objetivo", "Observaciones", "Fecha"};

    public TematicaReporte(Coordinador coord) {
        initComponents();
        coordinador = coord;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboBusqueda = new javax.swing.JComboBox<>();
        btnGenerar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblReloj = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtContenido = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 48)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("INSTITUTO TECNOLÓGICO SUPERIOR \"RUMIÑAHUI\"");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1380, -1));

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 48)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("REPORTES DE TEMATICAS DIARIAS");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 1380, -1));

        comboBusqueda.setFont(new java.awt.Font("Comic Sans MS", 0, 22)); // NOI18N
        comboBusqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Materia", "Docente", "Nivel", "Fecha" }));
        comboBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBusquedaActionPerformed(evt);
            }
        });
        add(comboBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 160, 160, 40));

        btnGenerar.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        btnGenerar.setText("GENERAR REPORTE");
        btnGenerar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });
        add(btnGenerar, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 160, 270, 40));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Nombre", "Tipo", "Creditos", "Carrera", "Nivel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 1350, 400));

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("TELFS: 2331-599 / 2332-554 / 2331-628");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 640, 1360, -1));

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("E-mail: info@ister.edu.ec");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 670, 520, -1));

        lblReloj.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        lblReloj.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblReloj.setText("RELOJ");
        add(lblReloj, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 670, 360, -1));

        jLabel11.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("BUSQUEDA POR:");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 240, 40));

        txtContenido.setFont(new java.awt.Font("Comic Sans MS", 0, 22)); // NOI18N
        txtContenido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtContenidoKeyReleased(evt);
            }
        });
        add(txtContenido, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 160, 490, 40));
    }// </editor-fold>//GEN-END:initComponents

    public void actualizarTabla() {

    }

    public void limpiar() {
        md1 = new DefaultTableModel(data1, cabeza1) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        this.tabla.setModel(md1);
        comboBusqueda.setSelectedIndex(0);
        txtContenido.setText("");
    }

    public void GenerarPdf() throws FileNotFoundException, DocumentException, BadElementException, IOException {
        Date date = new Date();
        Date date3 = date;
        DateFormat hourdateFormat3 = new SimpleDateFormat("HH-mm_dd-MM-yyyy");
        DateFormat hourdateFormat = new SimpleDateFormat("HH-mm_dd-MM-yyyy");
        Document document = new Document(PageSize.A4, 30, 20, 20, 20);
        Image imagen = Image.getInstance("Logo1.png");
        imagen.scalePercent(35f);
        imagen.setAlignment(Image.MIDDLE);

        FileOutputStream salida = new FileOutputStream("Reportes/ReporteTematica_" + hourdateFormat.format(date) + ".pdf");
        PdfWriter writer = PdfWriter.getInstance(document, salida);
        writer.setInitialLeading(0);
        PdfPTable table = new PdfPTable(5);
        Paragraph columna = new Paragraph("Curso");
        columna.getFont().setSize(10);
        table.addCell(columna);
        columna = new Paragraph("Tema");
        columna.getFont().setSize(10);
        table.addCell(columna);
        columna = new Paragraph("Objetivo");
        columna.getFont().setSize(10);
        table.addCell(columna);
        columna = new Paragraph("Obsv");
        columna.getFont().setSize(10);
        table.addCell(columna);
        columna = new Paragraph("Fecha");
        columna.getFont().setSize(10);
        table.addCell(columna);

        for (int i = 0; i < tema1.size(); i++) {
            Paragraph columna1 = new Paragraph(String.valueOf(tema1.get(i).getCodigo()));
            columna1.getFont().setSize(7);
            table.addCell(columna1);

            Paragraph columna2 = new Paragraph(tema1.get(i).getTema());
            columna2.getFont().setSize(7);
            table.addCell(columna2);

            Paragraph columna3 = new Paragraph(tema1.get(i).getObjetivo());
            columna3.getFont().setSize(7);
            table.addCell(columna3);

            Paragraph columna4 = new Paragraph(tema1.get(i).getObs());
            columna4.getFont().setSize(7);
            table.addCell(columna4);

            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            Paragraph columna6 = new Paragraph(dateFormat.format(tema1.get(i).getFecha()));
            columna6.getFont().setSize(7);
            table.addCell(columna6);

        }
        document.open();
        Paragraph paragraph = new Paragraph();
        paragraph.add("\nREPORTE DE TEMAS POR " + reporte + ": " + txtContenido.getText() + "\n\n");
        paragraph.setAlignment(Paragraph.ALIGN_CENTER);
        date = new Date();
        hourdateFormat = new SimpleDateFormat("HH:mm yyyy-MM-dd");
        Paragraph paragraph1 = new Paragraph();
        paragraph1.add("\n\nREPORTE GENERADO:  " + hourdateFormat.format(date));
        paragraph1.setAlignment(Paragraph.ALIGN_LEFT);
        document.add(imagen);
        document.add(paragraph);
        document.add(table);
        document.add(paragraph1);
        document.close();
        try {
            File path = new File("Reportes/ReporteTematica_" + hourdateFormat3.format(date3) + ".pdf");
            Desktop.getDesktop().open(path);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }


    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        try {
            GenerarPdf();
            JOptionPane.showMessageDialog(null, "Se ha generado el reporte exitosamente!");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TematicaReporte.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(TematicaReporte.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TematicaReporte.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGenerarActionPerformed


    private void comboBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBusquedaActionPerformed
        if (comboBusqueda.getSelectedItem().equals("Materia")) {
            Query = "SELECT * FROM tema C INNER JOIN curso O ON C.CODIGOCURSO = O.CODIGOCURSO WHERE O.CODIGOMATERIA IN (SELECT CODIGOMATERIA FROM materia WHERE NOMBREMATERIA LIKE '";
            reporte = "MATERIA";
            return;
        }
        if (comboBusqueda.getSelectedItem().equals("Docente")) {
            Query = "SELECT * FROM tema C INNER JOIN curso O ON C.CODIGOCURSO = O.CODIGOCURSO WHERE (O.CEDULADOCENTE LIKE '";
            reporte = "DOCENTE";
            return;
        }
        if (comboBusqueda.getSelectedItem().equals("Nivel")) {
            reporte = "NIVEL";
            Query = "SELECT * FROM tema C INNER JOIN curso O ON C.CODIGOCURSO = O.CODIGOCURSO WHERE O.CODIGOMATERIA IN (SELECT CODIGOMATERIA FROM materia WHERE NIVELMATERIA LIKE '";
            return;
        } else {
            reporte = "FECHA";
            Query = "SELECT * FROM tema C WHERE (FECHATEMA LIKE '";
        }
    }//GEN-LAST:event_comboBusquedaActionPerformed

    public void actualizarTablaCoincidenciasTemas(ArrayList<TemaVo> temas) {
        md1 = new DefaultTableModel(data1, cabeza1) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        this.tabla.setModel(md1);
        for (int i = 0; i < temas.size(); i++) {
            DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String arr[] = {String.valueOf(temas.get(i).getCodigo()), temas.get(i).getTema(), temas.get(i).getObjetivo(), temas.get(i).getObs(), dateFormat.format(temas.get(i).getFecha())};
            md1.addRow(arr);
        }
    }

    private void txtContenidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContenidoKeyReleased
        String valor = txtContenido.getText().toUpperCase();
        tema1 = coordinador.TemaReporte(Query + txtContenido.getText() + "%')");
        actualizarTablaCoincidenciasTemas(tema1);
    }//GEN-LAST:event_txtContenidoKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerar;
    private javax.swing.JComboBox<String> comboBusqueda;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel lblReloj;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtContenido;
    // End of variables declaration//GEN-END:variables
}
