/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista.Reporte;

import Vista.Materias.*;
import Controlador.Coordinador;
import Modelo.Curso.ClaseVo;
import Modelo.Docente.DocenteVo;
import Modelo.Materia.MateriaVo;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.parser.PdfTextExtractor;
import com.itextpdf.text.pdf.parser.SimpleTextExtractionStrategy;
import java.awt.Desktop;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

public class HorarioEstudianteReporte extends javax.swing.JPanel {

    /**
     * Creates new form ini
     */
    Coordinador coordinador;
    String seleccion = "NOMBREMATERIA";
    DefaultTableModel md1;
    ArrayList<ClaseVo> clases = new ArrayList<ClaseVo>();
    String reporte = "CARRERA";
    String data1[][] = {};
    String cabeza1[] = {"Cedula", "Nombre", "Apellido", "Carga Horaria"};

    public HorarioEstudianteReporte(Coordinador coord) {
        initComponents();
        coordinador = coord;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnGenerar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblReloj = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        Shorario = new javax.swing.JScrollPane();
        horario = new javax.swing.JTable();
        txtCedula = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 48)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("INSTITUTO TECNOLÓGICO SUPERIOR \"RUMIÑAHUI\"");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1380, -1));

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 48)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("REPORTES DE HORARIO ESTUDIANTIL");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 1380, -1));

        btnGenerar.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        btnGenerar.setText("GENERAR REPORTE");
        btnGenerar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });
        add(btnGenerar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 160, 270, 40));

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("TELFS: 2331-599 / 2332-554 / 2331-628");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 640, 1360, -1));

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("E-mail: info@ister.edu.ec");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 670, 520, -1));

        lblReloj.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        lblReloj.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblReloj.setText("RELOJ");
        add(lblReloj, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 670, 360, -1));

        jLabel11.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("CEDULA:");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 140, 40));

        Shorario.setBorder(null);
        Shorario.setToolTipText("");

        horario.setFont(new java.awt.Font("Comic Sans MS", 0, 8)); // NOI18N
        horario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", null, null, null, null, null},
                {"2", null, null, null, null, null},
                {"3", null, null, null, null, null},
                {"4", null, null, null, null, null},
                {"5", null, null, null, null, null},
                {"6", null, null, null, null, null}
            },
            new String [] {
                "Hora", "Lunes", "Martes", "Miercoles", "Jueves", "Viernes"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        horario.setEnabled(false);
        horario.setRowHeight(60);
        horario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                horarioMouseClicked(evt);
            }
        });
        Shorario.setViewportView(horario);

        add(Shorario, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 1290, 390));

        txtCedula.setFont(new java.awt.Font("Comic Sans MS", 0, 22)); // NOI18N
        txtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaKeyTyped(evt);
            }
        });
        add(txtCedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 300, -1));

        btnBuscar.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        btnBuscar.setText("BUSCAR");
        btnBuscar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 160, 270, 40));
    }// </editor-fold>//GEN-END:initComponents

    public void actualizarTabla() {

    }

    public void GenerarPdf() throws FileNotFoundException, DocumentException, BadElementException, IOException {
        Date date = new Date();
        Date date3 = date;
        DateFormat hourdateFormat3 = new SimpleDateFormat("HH-mm_dd-MM-yyyy");
        DateFormat hourdateFormat = new SimpleDateFormat("HH-mm_dd-MM-yyyy");
        Document document = new Document(PageSize.A4, 30, 20, 20, 20);
        Image imagen = Image.getInstance("Logo1.png");
        imagen.scalePercent(35f);
        imagen.setAlignment(Image.MIDDLE);

        FileOutputStream salida = new FileOutputStream("Reportes/ReporteEstudianteHorario_" + hourdateFormat.format(date) + ".pdf");
        PdfWriter writer = PdfWriter.getInstance(document, salida);
        writer.setInitialLeading(0);
        PdfPTable table = new PdfPTable(6);
        table.addCell(" ");
        Paragraph columna = new Paragraph("LUNES");
        columna.getFont().setSize(10);
        table.addCell(columna);
        columna = new Paragraph("MARTES");
        columna.getFont().setSize(10);
        table.addCell(columna);
        columna = new Paragraph("MIERCOLES");
        columna.getFont().setSize(10);
        table.addCell(columna);
        columna = new Paragraph("JUEVES");
        columna.getFont().setSize(10);
        table.addCell(columna);
        columna = new Paragraph("VIERNES");
        columna.getFont().setSize(10);
        table.addCell(columna);

        for (int i = 0; i < 6; i++) {
            Paragraph columna1 = new Paragraph(String.valueOf(i + 1));
            columna1.getFont().setSize(10);
            table.addCell(columna1);
            for (int j = 1; j < 6; j++) {

                if (String.valueOf(horario.getValueAt(i, j)) == null) {
                    table.addCell(" ");
                } else {
                    Paragraph columna2 = new Paragraph(String.valueOf(horario.getValueAt(i, j)));
                    columna2.getFont().setSize(10);
                    table.addCell(columna2);
                }
            }
        }

        document.open();
        Paragraph paragraph = new Paragraph();
        paragraph.add("\nHORARIO ESTUDIANTE: " + txtCedula.getText() + "\n\n");
        paragraph.setAlignment(Paragraph.ALIGN_CENTER);
        date = new Date();
        hourdateFormat = new SimpleDateFormat("HH:mm dd/MM/yyyy");
        Paragraph paragraph1 = new Paragraph();
        paragraph1.add("\n\nREPORTE GENERADO:  " + hourdateFormat.format(date));
        paragraph1.setAlignment(Paragraph.ALIGN_LEFT);
        document.add(imagen);
        document.add(paragraph);
        document.add(table);
        document.add(paragraph1);
        document.close();
        try {
            File path = new File("Reportes/ReporteEstudianteHorario_" + hourdateFormat3.format(date3) + ".pdf");
            Desktop.getDesktop().open(path);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }

    public void limpiar() {
        for (int i = 0; i < 6; i++) {
            for (int j = 1; j < 6; j++) {
                horario.setValueAt(" ", i, j);
            }
        }
        txtCedula.setText("");
    }

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        try {
            GenerarPdf();
            JOptionPane.showMessageDialog(null, "Se ha generado el reporte exitosamente!");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(HorarioEstudianteReporte.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(HorarioEstudianteReporte.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(HorarioEstudianteReporte.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGenerarActionPerformed


    private void horarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_horarioMouseClicked
        int fila = horario.rowAtPoint(evt.getPoint());
        int columna = horario.columnAtPoint(evt.getPoint());
        if ((fila > -1) && horario.getValueAt(fila, columna).toString().equals("true")) {
            System.out.println(fila + "-" + columna);

        }
    }//GEN-LAST:event_horarioMouseClicked

    private void txtCedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaKeyTyped
        coordinador.logica.validaNumero(evt);
    }//GEN-LAST:event_txtCedulaKeyTyped

    public void llenaHorario(String cedula) {
        clases = coordinador.horarioEstudiante(cedula);
        if (clases.size() == 0) {
            limpiar();
            JOptionPane.showMessageDialog(null, "El estudiante no tiene materias asignadas!");
        }
        for (int i = 0; i < 6; i++) {
            for (int j = 1; j < 6; j++) {
                for (int t = 0; t < clases.size(); t++) {
                    if (clases.get(t).getDia() == j && clases.get(t).getHora() - 1 == i) {
                        horario.setValueAt(String.valueOf(clases.get(t).getMateria()) + "-" + clases.get(t).getAula(), i, j);
                    }
                }
            }
        }
        DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
        tcr.setHorizontalAlignment(SwingConstants.CENTER);
        for (int i = 0; i < 6; i++) {
            horario.getColumnModel().getColumn(i).setCellRenderer(tcr);
        }
    }

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (coordinador.existeEstudiante(txtCedula.getText())) {
            llenaHorario(txtCedula.getText());
        } else {
            JOptionPane.showMessageDialog(null, "El estudiante no se encuentra registrado en el sistema!");
        }
    }//GEN-LAST:event_btnBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane Shorario;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JTable horario;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    public javax.swing.JLabel lblReloj;
    private javax.swing.JTextField txtCedula;
    // End of variables declaration//GEN-END:variables
}
